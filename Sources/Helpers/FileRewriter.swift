//
//  FileRewriter.swift
//  configen
//
//  Created by Suyash Srijan on 26/10/2018.
//  Copyright Â© 2018 The App Business. All rights reserved.
//

import Foundation
import SwiftSyntax

/// This class is responsible for taking an input configuration Swift file and "rewriting" the struct.
///
/// The output configuration file is generated by simply renaming the input struct and removing the configuration protocol conformance clause. A private initialiser is also
/// inserted into the struct to prevent initialization as it is not needed when all the variables are static.
class FileRewriter: SyntaxRewriter {
  
  // MARK: - Properties -
  // MARK: Private
  
  /// The name of the struct
  private let name: String
  
  // MARK: - Init -
  // MARK: Public
  
  /// Class initializer
  ///
  /// - Parameter structName: The struct name that will be used to rename the input struct
  init(structName: String) {
    self.name = structName
  }
  
  // MARK: - Functions -
  // MARK: Public
  
  /// Visit a `StructDeclSyntax` node in the AST.
  ///
  /// Visit a `StructDeclSyntax` and rewrite it by changing the struct name, removing the protocol conformance & inserting a private initializer. This function returns the rewritten struct node, which is used to update the current AST node.
  ///
  /// - Parameter node: A `StructDeclSyntax` node
  /// - Returns: A `DeclSyntax` node
  override func visit(_ node: StructDeclSyntax) -> DeclSyntax {
    let newIdentifier = node.identifier.withKind(.identifier(name)).withTrailingTrivia(.spaces(1))
    let privateInit = PrivateInitializer()
    let newMembers = node.members.members.inserting(privateInit.privateInitializerDeclWithEmptyBody(), at: 0)
    let newMembersList = node.members.withMembers(newMembers)
    return node.withIdentifier(newIdentifier).withInheritanceClause(nil).withMembers(newMembersList)
  }
}
